name: 'Setup Chryse'

inputs:
  source-ref:
    description: Chryse branch, tag or SHA to checkout. Leave blank to not install locally.

  athena-source-ref:
    description: Athena branch, tag or SHA to checkout. Leave blank to not install locally.

  install-oss-cad-suite:
    description: Install OSS CAD Suite.

  github-token:
    description: GitHub token used by YosysHQ/setup-oss-cad-suite.

  install-zig:
    description: Install Zig (specify version).

runs:
  using: 'composite'
  steps:
  - name: Checkout Chryse
    if: ${{ inputs.source-ref }}
    uses: actions/checkout@v4
    with:
      repository: chryse-hdl/chryse
      path: setup-chryse-out/chryse
      ref: ${{ inputs.source-ref }}

  - name: Set up JDK 22
    uses: actions/setup-java@v4
    with:
      java-version: '22'
      distribution: 'temurin'
      cache: 'sbt'

  - name: Install sbt
    run: |
      wget -q https://github.com/sbt/sbt/releases/download/v1.9.8/sbt-1.9.8.tgz
      mkdir -p setup-chryse-out
      tar -C setup-chryse-out -xf sbt-1.9.8.tgz
      sudo ln -fs "$PWD/setup-chryse-out/sbt/bin/sbt" /usr/bin/sbt
    shell: bash

  - name: Install Verilator
    if: ${{ ! inputs.install-oss-cad-suite }}
    run: sudo apt-get install -y verilator
    shell: bash

  - name: Build and install Chryse locally
    if: ${{ inputs.source-ref }}
    run: cd setup-chryse-out/chryse && sbt publishLocal
    shell: bash

  - name: Checkout Athena
    if: ${{ inputs.athena-source-ref }}
    uses: actions/checkout@v4
    with:
      repository: chryse-hdl/athena
      path: setup-chryse-out/athena
      ref: ${{ inputs.athenasource-ref }}

  - name: Build and install Athena locally
    if: ${{ inputs.athena-source-ref }}
    run: cd setup-chryse-out/athena && sbt publishLocal
    shell: bash

  - name: Install OSS CAD Suite
    if: ${{ inputs.install-oss-cad-suite }}
    uses: YosysHQ/setup-oss-cad-suite@v3
    with:
      github-token: ${{ inputs.github-token }}

  - name: Report Yosys version
    if: ${{ inputs.install-oss-cad-suite }}
    run: yosys --version
    shell: bash

  - name: Install Zig
    if: ${{ inputs.install-zig }}
    uses: goto-bus-stop/setup-zig@v2
    with:
      version: ${{ inputs.install-zig }}

  - name: Report Zig version
    if: ${{ inputs.install-zig }}
    run: zig version
    shell: bash